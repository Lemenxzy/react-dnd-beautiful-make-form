[{"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/index.js":"1","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/App.js":"2","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/com-setting/index.js":"3","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/Container.js":"4","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/container.js":"5","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/leftWrap.js":"6","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/contentWrap.js":"7","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/com-setting/DroppableIDs.js":"8","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/cpvForm.js":"9","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/cpForm.js":"10","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/text/index.js":"11","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/radio/index.js":"12","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/textarea/index.js":"13","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/datepick/index.js":"14","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/commonCompetent/viewCom.js":"15","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/checkbox/index.js":"16","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/numberinput/index.js":"17","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/productionLine/index.js":"18","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/selectCheckbox/index.js":"19","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/commonCompetent/inputView.js":"20","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/com-setting/cpSetting.js":"21","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/com-setting/cpvSetting.js":"22","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/emailInput/index.js":"23","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/util.js":"24","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/picture/index.js":"25","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/testData.js":"26","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/organization/index.js":"27","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/selectStaff/index.js":"28","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/inputAndAdd/index.js":"29"},{"size":421,"mtime":1609236404560,"results":"30","hashOfConfig":"31"},{"size":164,"mtime":1608283684314,"results":"32","hashOfConfig":"31"},{"size":26141,"mtime":1609741870627,"results":"33","hashOfConfig":"31"},{"size":2757,"mtime":1608283581059,"results":"34","hashOfConfig":"31"},{"size":15996,"mtime":1609812999361,"results":"35","hashOfConfig":"31"},{"size":6328,"mtime":1609764048228,"results":"36","hashOfConfig":"31"},{"size":6987,"mtime":1609763096893,"results":"37","hashOfConfig":"31"},{"size":235,"mtime":1608275331126,"results":"38","hashOfConfig":"31"},{"size":1703,"mtime":1609812547289,"results":"39","hashOfConfig":"31"},{"size":1466,"mtime":1609812238904,"results":"40","hashOfConfig":"31"},{"size":393,"mtime":1608774934723,"results":"41","hashOfConfig":"31"},{"size":580,"mtime":1608725959834,"results":"42","hashOfConfig":"31"},{"size":411,"mtime":1608774934736,"results":"43","hashOfConfig":"31"},{"size":482,"mtime":1608790423879,"results":"44","hashOfConfig":"31"},{"size":10521,"mtime":1609812999360,"results":"45","hashOfConfig":"31"},{"size":544,"mtime":1608726172266,"results":"46","hashOfConfig":"31"},{"size":441,"mtime":1608774934728,"results":"47","hashOfConfig":"31"},{"size":359,"mtime":1608791373421,"results":"48","hashOfConfig":"31"},{"size":762,"mtime":1608726987309,"results":"49","hashOfConfig":"31"},{"size":346,"mtime":1608790423875,"results":"50","hashOfConfig":"31"},{"size":2292,"mtime":1609235171632,"results":"51","hashOfConfig":"31"},{"size":1634,"mtime":1608891357429,"results":"52","hashOfConfig":"31"},{"size":349,"mtime":1608791685409,"results":"53","hashOfConfig":"31"},{"size":1761,"mtime":1609226918803,"results":"54","hashOfConfig":"31"},{"size":499,"mtime":1609762874725,"results":"55","hashOfConfig":"31"},{"size":1551,"mtime":1609740684167,"results":"56","hashOfConfig":"31"},{"size":353,"mtime":1608790690518,"results":"57","hashOfConfig":"31"},{"size":353,"mtime":1608793387763,"results":"58","hashOfConfig":"31"},{"size":472,"mtime":1609763156127,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"12el1l8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/index.js",[],["130","131"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/App.js",[],["132","133"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/com-setting/index.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/Container.js",["134","135","136","137","138","139","140"],"/**\r\n * @Author zhiyuan.xu\r\n * @Date 2020/12/11\r\n * @Version 1.0.0\r\n * @Last Modified by zhiyuan.xu\r\n * @Last Modified Time 2020/12/11\r\n */\r\nimport React, {  useState, useCallback } from 'react';\r\nimport { Tabs, Icon } from 'antd';\r\nimport comDataMap from '../com-setting'\r\nimport  { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nconst { TabPane } = Tabs;\r\n\r\nconst data = Object.keys(comDataMap).map(key => ({...comDataMap[key]}));\r\nexport const Container = function Container() {\r\n    const [moveList, setMoveList] = useState([])\r\n\r\n    const dropData = (data) => {\r\n        const list = [...moveList]\r\n        list.push({\r\n            ...data,\r\n            id: Math.random().toString(16).substring(2)\r\n        });\r\n        setMoveList(list);\r\n    }\r\n\r\n    const changeListHandle = useCallback((dragIndex, hoverIndex) => {\r\n        let CardList = [...moveList];\r\n        let tmp = CardList[dragIndex] //临时储存文件\r\n        CardList.splice(dragIndex,1) //移除拖拽项\r\n        CardList.splice(hoverIndex,0, tmp) //插入放置项\r\n        setMoveList(CardList)\r\n    }, [moveList])\r\n\r\n    const onDragEnd = (result) => {\r\n        // dropped outside the list\r\n        const { source, destination } = result;\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={'big-container'}>\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                    <div className={'leftNav'} >\r\n                        <div className={'btn-wrap'}>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'content-wrap'} >\r\n                    </div>\r\n                </DragDropContext>\r\n                <div className={'rightNav'}>\r\n                    <Tabs defaultActiveKey=\"2\">\r\n                        <TabPane\r\n                            tab={\r\n                                <span>\r\n                                    <Icon type=\"form\" />\r\n                                    功能编辑\r\n                                </span>\r\n                            }\r\n                            key=\"1\"\r\n                        >\r\n                            Tab 1\r\n                        </TabPane>\r\n                        <TabPane tab={\r\n                                <span>\r\n                                    <Icon type=\"highlight\" />\r\n                                    样式设置\r\n                                </span>\r\n                            }\r\n                            key=\"2\"\r\n                        >\r\n                            Tab 2\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/container.js",["141"],"/**\r\n * @Author zhiyuan.xu\r\n * @Date 2020/12/11\r\n * @Version 1.0.0\r\n * @Last Modified by zhiyuan.xu\r\n * @Last Modified Time 2020/12/11\r\n */\r\nimport React, {  useState, useCallback, useRef, useEffect } from 'react';\r\nimport comDataMap, { ComMap, changeMapKey, getStateListData } from '../com-setting'\r\nimport { getSettingData } from '../com-setting/cpSetting';\r\nimport { actionKeys } from '../com-setting/cpvSetting';\r\nimport  { DragDropContext } from 'react-beautiful-dnd'\r\nimport { LeftWrap } from './leftWrap';\r\nimport { ContentWrap } from './contentWrap'\r\nimport { Tooltip, Button, Empty, Modal } from 'antd';\r\nimport CpvForm from \"./cpvForm\";\r\nimport CpForm from \"./cpForm\";\r\nimport { getFormData, getCpvData } from '../dropDemo/util';\r\nimport { testData } from '../testData';\r\nimport cloneDeep from 'clone-deep';\r\nimport { madeTemplateData } from '../com-setting/templateJsonSetting';\r\nimport {DoubleLeftOutlined, DoubleRightOutlined} from '@ant-design/icons';\r\n\r\nexport const Container = function Container() {\r\n    const [moveList, setMoveList] = useState([])\r\n    const [rightData, setRightData] = useState(null)\r\n    const [leftNav, setLeftNav] = useState(true);\r\n    const [rightNav, setRightNav] = useState(false);\r\n    const activeData = useRef({})\r\n    const rightDataMap = useRef({})\r\n\r\n    useEffect(() => {\r\n        // 编辑情况\r\n        rightDataMap.current = cloneDeep(testData)\r\n        const editMoveList = getStateListData(cloneDeep(testData));\r\n        setMoveList(editMoveList)\r\n    }, [])\r\n\r\n    // 添加\r\n    const dropData = (data, droppableDestination) => {\r\n        const list = [...moveList]\r\n        const itemId = Math.random().toString(16).substring(2);\r\n        list.splice(droppableDestination.index, 0, {\r\n            ...data,\r\n            id: itemId\r\n        });\r\n        // 提交数据...处理\r\n        rightDataMap.current[itemId] = getFormData(getSettingData(), data)\r\n        // 处理排序\r\n        list.forEach((item, index) => {\r\n            rightDataMap.current[item.id].sort = index;\r\n        })\r\n        setMoveList(list);\r\n    }\r\n\r\n    const changeListHandle = useCallback((dragIndex, hoverIndex) => {\r\n        let CardList = [...moveList];\r\n        let tmp = CardList[dragIndex] //临时储存文件\r\n        CardList.splice(dragIndex,1) //移除拖拽项\r\n        CardList.splice(hoverIndex,0, tmp) //插入放置项\r\n        // 处理排序\r\n        CardList.forEach((item, index) => {\r\n            rightDataMap.current[item.id].sort = index;\r\n        })\r\n        setMoveList(CardList)\r\n    }, [moveList])\r\n\r\n\r\n    const changeValueHanlde = (key, pId, data, activeData, actionKey) => {\r\n        const Select = changeMapKey.Select;\r\n        const obj = {\r\n            [Select]: () => {\r\n                setMoveList((list) => {\r\n                    const cloneData = list.map((item) => {\r\n                        if (item.id === pId) {\r\n                            item.defaultValue = cloneDeep(data);\r\n                        }\r\n                        return item;\r\n                    })\r\n                    // 显示数据\r\n                    return cloneData\r\n                });\r\n\r\n                // 提交数据\r\n                const actionUpdateV = {\r\n                    [actionKeys.changeValue]: (item) => {\r\n                        rightDataMap.current[pId].cpvData[item.id].name = item.value;\r\n                    },\r\n                    [actionKeys.addMany]: (list) => {\r\n                        const addData = getCpvData({\r\n                            defaultValue: list\r\n                        }, 9999)\r\n                        rightDataMap.current[pId].cpvData = Object.assign(rightDataMap.current[pId].cpvData, addData)\r\n                    },\r\n                    [actionKeys.addOne]: (data) => {\r\n                        const addData = getCpvData({\r\n                            defaultValue: [ data ]\r\n                        }, 9999)\r\n                        rightDataMap.current[pId].cpvData = Object.assign(rightDataMap.current[pId].cpvData, addData)\r\n                    },\r\n                    [actionKeys.delete]: (id) => {\r\n                        delete rightDataMap.current[pId].cpvData[id]\r\n                    },\r\n                    [actionKeys.sort]: (list) => {\r\n                        list.map((item, index) => {\r\n                            rightDataMap.current[pId].cpvData[item.id].sort = index;\r\n                        })\r\n                    }\r\n                }\r\n                actionUpdateV[actionKey](activeData)\r\n            }\r\n        }\r\n        obj[key] && obj[key]()\r\n\r\n    }\r\n\r\n\r\n    const getItem = (id) => ComMap[id];\r\n\r\n    const onDragEnd = (result) => {\r\n        // dropped outside the list\r\n        const { source, destination, draggableId } = result;\r\n\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        if (source.droppableId === destination.droppableId) {\r\n            // sort\r\n            changeListHandle(source.index, destination.index)\r\n        } else {\r\n            // add\r\n            const data = getItem(draggableId)\r\n            dropData(data, destination);\r\n        }\r\n    }\r\n\r\n    const setActive = (id) => {\r\n        // 如果点击两次一致就不触发\r\n        if (activeData.current.id === id) return;\r\n\r\n        setMoveList((list) => {\r\n            return list.map(item => {\r\n                if (item.id === id) {\r\n                    item.active = true\r\n                    activeData.current = item\r\n                } else {\r\n                    item.active = false\r\n                }\r\n                return item;\r\n            })\r\n        })\r\n    }\r\n\r\n    const deleteItem = (id) => {\r\n        if (rightData && rightData.data.id === id) {\r\n            setRightData(null)\r\n            setRightNav(false)\r\n        }\r\n        // 删除显示数据\r\n        setMoveList((list) => list.filter( item => item.id !== id ));\r\n        // 删除提交数据\r\n        delete rightDataMap.current[id];\r\n    }\r\n\r\n    const changeLableName = (name, id) => {\r\n        // 显示数据的改变\r\n        setMoveList(list => {\r\n            return  list.map(item => {\r\n                if (item.id === id) {\r\n                    item.name = name\r\n                }\r\n                return item;\r\n            })\r\n        })\r\n        // 提交数据的改变\r\n        rightDataMap.current[id].name = name;\r\n    }\r\n\r\n    const setSettingDataActive = (data) => {\r\n        // 展示数据\r\n        setRightData(data)\r\n        hiddenRightHandle(true)\r\n    }\r\n\r\n    const hiddenRightHandle = (boolean) => {\r\n        setRightNav(boolean)\r\n    }\r\n\r\n    // 改变cp的编辑\r\n    const ChangeCpFormData = (id, data) => {\r\n        Object.keys(data).forEach((key) => {\r\n            rightDataMap.current[id][key] = data[key]\r\n        })\r\n    }\r\n\r\n    // 左侧的显示数据菜单\r\n    const setPvFormValue = (form, id) => {\r\n        const values = form.getFieldsValue()\r\n        Object.keys(values).forEach((k) => {\r\n            values[k] = rightDataMap.current[id][k]\r\n        })\r\n        form.resetFields()\r\n        form.setFieldsValue(values)\r\n    }\r\n\r\n    // 改变cpv data\r\n    const ChangeCpvFormData = (pid, vid, value) => {\r\n        Object.keys(value).forEach((key) => {\r\n            rightDataMap.current[pid].cpvData[vid][key] = value[key]\r\n        })\r\n    }\r\n\r\n    // 改变 cpv data\r\n    const setCpvFormValue = (form, pId, vId) => {\r\n        const values = form.getFieldsValue();\r\n        Object.keys(values).forEach((k) => {\r\n            values[k] = rightDataMap.current[pId].cpvData[vId][k]\r\n        })\r\n        form.resetFields()\r\n        form.setFieldsValue(values)\r\n    }\r\n\r\n    const renderRight = (rightData) => {\r\n        const rightObj = {\r\n            [changeMapKey.Select]: <div className={'form-item-wrap'}>\r\n                <div className={'form-right-wrap'}>\r\n                    <div className={'form-item-title'}>\r\n                        <span>\r\n                             {\r\n                                 `\"${rightData.pName}\"的选项: \"${rightData.data.value}\" 的设置`\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                    <Tooltip placement=\"bottom\" title={`收起`}>\r\n                        <Button icon={\r\n                            <DoubleRightOutlined />\r\n                        } onClick={() => {\r\n                            hiddenRightHandle(false)\r\n                        }} />\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <CpvForm rightData={rightData}\r\n                             ChangeCpvFormData={ ChangeCpvFormData }\r\n                             setCpvFormValue = { setCpvFormValue }\r\n                    />\r\n                </div>\r\n            </div>,\r\n            [changeMapKey.cpChange]: <div className={'form-item-wrap'}>\r\n                <div className={'form-right-wrap'}>\r\n                    <div className={'form-item-title'}>\r\n                        <span>\r\n                            {\r\n                                `\"${rightData.data.name}\"的设置`\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <Tooltip placement=\"left\" title={`收起`}>\r\n                        <Button icon={ <DoubleRightOutlined /> } onClick={() => {\r\n                            hiddenRightHandle(false)\r\n                        }} />\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <CpForm ChangeCpFormData={ ChangeCpFormData }\r\n                            rightData={rightData}\r\n                            setPvFormValue = {setPvFormValue}\r\n                    />\r\n                </div>\r\n            </div>\r\n        }\r\n        return rightObj[rightData.key]\r\n    }\r\n\r\n    const addFormItem = (draggableId) => {\r\n        const data = getItem(draggableId)\r\n        dropData(data, {\r\n            index: moveList.length\r\n        });\r\n    }\r\n\r\n    const hiddenLeftHandle = (boolean) => {\r\n        setLeftNav(boolean)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={'title-btn-wrap'}>\r\n                <Button type=\"primary\" onClick={() => {\r\n                    Modal.info({\r\n                        title: '这是提交的数据',\r\n                        width: 800,\r\n                        content: (\r\n                            <div>\r\n                                <pre>\r\n                                    <code>\r\n                                        {\r\n                                            JSON.stringify(rightDataMap.current, null, 4)\r\n                                        }\r\n                                    </code>\r\n                                </pre>\r\n                            </div>\r\n                        ),\r\n                    });\r\n                }}>获取提交数据</Button>\r\n                <Button type=\"primary\" onClick={() => {\r\n                    Modal.info({\r\n                        title: '这是展示的数据',\r\n                        width: 800,\r\n                        content: (\r\n                            <div>\r\n                                <pre>\r\n                                    <code>\r\n                                        {\r\n                                            JSON.stringify(moveList, null, 4)\r\n                                        }\r\n                                    </code>\r\n                                </pre>\r\n                            </div>\r\n                        ),\r\n                    });\r\n                }}>获取展示数据</Button>\r\n                <Button type=\"primary\" onClick={() => {\r\n                    const showViewData = madeTemplateData(rightDataMap.current);\r\n                    Modal.info({\r\n                        title: '这是展示的数据',\r\n                        width: 800,\r\n                        content: (\r\n                            <div>\r\n                                <pre>\r\n                                    <code>\r\n                                        {\r\n                                            JSON.stringify(showViewData, null, 4)\r\n                                        }\r\n                                    </code>\r\n                                </pre>\r\n                            </div>\r\n                        ),\r\n                    });\r\n                }}>获取JSON模板数据</Button>\r\n            </div>\r\n            <div className={'big-container'}>\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                    <div className={'leftNav'}>\r\n                        <div className={'btn-big-wrap'} style={\r\n                            leftNav ? {\r\n                            } : {\r\n                                width: 0,\r\n                            }\r\n                        }>\r\n                            <LeftWrap btnList={comDataMap}\r\n                                      addFormItem = {addFormItem}\r\n                                      hiddenLeftHandle={ hiddenLeftHandle }\r\n                            />\r\n                        </div>\r\n                        <div className={'more-btn'} style={\r\n                            leftNav ? {display: 'none'} : {}\r\n                        }>\r\n                            <Tooltip placement=\"right\" title={`展开`}>\r\n                                <Button icon={ <DoubleRightOutlined /> } onClick={() => {\r\n                                    hiddenLeftHandle(true)\r\n                                }} />\r\n                            </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'content-wrap'} >\r\n                        <ContentWrap changeLableName={changeLableName}\r\n                                     deleteHandle={deleteItem}\r\n                                     setActive={setActive}\r\n                                     moveList={moveList}\r\n                                     changeValueHanlde={changeValueHanlde}\r\n                                     setSettingDataActive={setSettingDataActive}\r\n                        />\r\n                    </div>\r\n                </DragDropContext>\r\n                <div className={'rightNav-wrap'}>\r\n                    <div className={'rightNav'} style={\r\n                        rightNav ? {width: 300} : { width: 0, overflow: 'hidden' }\r\n                    }>\r\n                        {\r\n                            rightData ?\r\n                                renderRight(rightData)\r\n                                :\r\n                                <div style={{ width:'100%' }}>\r\n                                    <div style={{ display:'flex', justifyContent:'flex-end' }}>\r\n                                        <Tooltip placement=\"bottom\" title={`收起`}>\r\n                                            <Button icon={ <DoubleRightOutlined /> } onClick={() => {\r\n                                                hiddenRightHandle(false)\r\n                                            }} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                    <div style={{ marginTop: 50 }}>\r\n                                        <Empty description={'暂无选中数据'} />\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className={'right-more-btn'} style={\r\n                        rightNav? {display: 'none'} : {}\r\n                    }>\r\n                        <Tooltip placement=\"right\" title={`展开`}>\r\n                            <Button icon={\r\n                                <DoubleLeftOutlined />\r\n                            } onClick={() => {\r\n                                hiddenRightHandle(true)\r\n                            }} />\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n",["142","143"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/leftWrap.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/contentWrap.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/com-setting/DroppableIDs.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/cpvForm.js",["144","145"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/cpForm.js",["146","147"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/text/index.js",[],["148","149"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/radio/index.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/textarea/index.js",[],["150","151"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/datepick/index.js",[],["152","153"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/commonCompetent/viewCom.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/checkbox/index.js",[],["154","155"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/numberinput/index.js",[],["156","157"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/productionLine/index.js",[],["158","159"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/selectCheckbox/index.js",[],["160","161"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/commonCompetent/inputView.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/com-setting/cpSetting.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/com-setting/cpvSetting.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/emailInput/index.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/dropDemo/util.js",["162"],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/picture/index.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/testData.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/organization/index.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/selectStaff/index.js",[],"/Users/zhiyuan/Documents/myprod/mydnd/demo/src/antd-com/inputAndAdd/index.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"163","replacedBy":"167"},{"ruleId":"165","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":11,"column":28,"nodeType":"171","messageId":"172","endLine":11,"endColumn":37},{"ruleId":"169","severity":1,"message":"173","line":11,"column":39,"nodeType":"171","messageId":"172","endLine":11,"endColumn":48},{"ruleId":"169","severity":1,"message":"174","line":14,"column":7,"nodeType":"171","messageId":"172","endLine":14,"endColumn":11},{"ruleId":"169","severity":1,"message":"175","line":18,"column":11,"nodeType":"171","messageId":"172","endLine":18,"endColumn":19},{"ruleId":"169","severity":1,"message":"176","line":27,"column":11,"nodeType":"171","messageId":"172","endLine":27,"endColumn":27},{"ruleId":"169","severity":1,"message":"177","line":37,"column":17,"nodeType":"171","messageId":"172","endLine":37,"endColumn":23},{"ruleId":"169","severity":1,"message":"178","line":37,"column":25,"nodeType":"171","messageId":"172","endLine":37,"endColumn":36},{"ruleId":"179","severity":1,"message":"180","line":105,"column":48,"nodeType":"181","messageId":"182","endLine":105,"endColumn":50},{"ruleId":"163","replacedBy":"183"},{"ruleId":"165","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":27,"column":8,"nodeType":"187","endLine":27,"endColumn":10,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"186","line":31,"column":8,"nodeType":"187","endLine":31,"endColumn":33,"suggestions":"189"},{"ruleId":"185","severity":1,"message":"186","line":29,"column":8,"nodeType":"187","endLine":29,"endColumn":10,"suggestions":"190"},{"ruleId":"185","severity":1,"message":"186","line":34,"column":8,"nodeType":"187","endLine":34,"endColumn":33,"suggestions":"191"},{"ruleId":"163","replacedBy":"192"},{"ruleId":"165","replacedBy":"193"},{"ruleId":"163","replacedBy":"194"},{"ruleId":"165","replacedBy":"195"},{"ruleId":"163","replacedBy":"196"},{"ruleId":"165","replacedBy":"197"},{"ruleId":"163","replacedBy":"198"},{"ruleId":"165","replacedBy":"199"},{"ruleId":"163","replacedBy":"200"},{"ruleId":"165","replacedBy":"201"},{"ruleId":"163","replacedBy":"202"},{"ruleId":"165","replacedBy":"203"},{"ruleId":"163","replacedBy":"204"},{"ruleId":"165","replacedBy":"205"},{"ruleId":"179","severity":1,"message":"180","line":45,"column":45,"nodeType":"181","messageId":"182","endLine":45,"endColumn":47},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],["206"],["207"],"no-unused-vars","'Droppable' is defined but never used.","Identifier","unusedVar","'Draggable' is defined but never used.","'data' is assigned a value but never used.","'dropData' is assigned a value but never used.","'changeListHandle' is assigned a value but never used.","'source' is assigned a value but never used.","'destination' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["206"],["207"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["208"],["209"],["210"],["211"],["206"],["207"],["206"],["207"],["206"],["207"],["206"],["207"],["206"],["207"],["206"],["207"],["206"],["207"],"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"212","fix":"216"},{"desc":"214","fix":"217"},"Update the dependencies array to be: [form, props]",{"range":"218","text":"219"},"Update the dependencies array to be: [form, props, props.rightData.data.id]",{"range":"220","text":"221"},{"range":"222","text":"219"},{"range":"223","text":"221"},[759,761],"[form, props]",[879,904],"[form, props, props.rightData.data.id]",[725,727],[825,850]]